{"version":3,"sources":["components/AddRoom.jsx","components/RoomButton.jsx","components/Title.jsx","components/RoomWindow.jsx","components/AddRoomButton.jsx","components/AddProduct.jsx","components/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["withRouter","setDataRoom","history","useState","roomSelectInput","setroomSelectInput","roomNameInput","setRoomNameInput","background","setbackground","show","setShow","className","Alert","variant","onClose","dismissible","Heading","AlertDismissible","DropdownButton","id","title","Dropdown","Item","onClick","InputGroup","Prepend","Text","FormControl","onChange","e","target","value","length","maxLength","aria-label","aria-describedby","onChangeComplete","hex","ButtonToolbar","Button","push","quantity","setroomIndex","name","color","index","style","backgroundColor","outline","Badge","Title","dataRoom","toggle","settoggle","Select","setSelect","products","ProductStatusCheck","console","log","i","CheckStereoSystemExsist","select","CheckBoilerExsist","mode","Fab","stateByColor","state","IOSSwitch","withStyles","theme","root","width","height","padding","margin","spacing","switchBase","transform","palette","common","white","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","Switch","focusVisibleClassName","disableRipple","productName","FormGroup","FormControlLabel","control","label","useStyles","makeStyles","HomeIcon","SvgIcon","d","fontSize","ProductList","roomIndex","map","element","key","App","comeFromAddRoom","roomSelect","roomName","roomColor","GetProducts","list","temp","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52ac2a27.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport '../css/AddRoom.css'\r\nimport { CirclePicker } from 'react-color'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { DropdownButton, Dropdown,ButtonToolbar ,Button, InputGroup, FormControl } from 'react-bootstrap'\r\n\r\n\r\nconst AddRoom = ({ setDataRoom, history }) => {\r\n\r\n    const [roomSelectInput, setroomSelectInput] = useState('--Please choose an option--')\r\n    const [roomNameInput, setRoomNameInput] = useState('')\r\n    const [background, setbackground] = useState('#fff')\r\n    const [show, setShow] = useState(false);\r\n\r\n    const roomName = (e) => {\r\n        if (e.target.value.length > 0) {\r\n            setRoomNameInput(e.target.value)\r\n\r\n        } else {\r\n            setRoomNameInput('')\r\n        }\r\n    }\r\n\r\n    const roomColor = (e) => {\r\n        setbackground(e.hex)\r\n    }\r\n\r\n    const sendDateToApp = () => {\r\n        if (roomSelectInput === '--Please choose an option--' || roomNameInput.length < 1) {\r\n            setShow(true)\r\n        } else {\r\n            setDataRoom(roomSelectInput, roomNameInput, background)\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    const AlertDismissible = () => {\r\n\r\n        if (show) {\r\n            return (\r\n                <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n                    <Alert.Heading>You got an error!</Alert.Heading>\r\n                    <p>\r\n                        you have to choose room name and type\r\n                    </p>\r\n                </Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"AddRoom\">\r\n            {AlertDismissible()}\r\n            <DropdownButton id=\"dropdown-basic-button\" title={roomSelectInput}>\r\n                <Dropdown.Item onClick={() => setroomSelectInput(\"Bedroom\")} >Bedroom</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setroomSelectInput(\"kitchen\")} >kitchen</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setroomSelectInput(\"toilet\")} >toilet</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setroomSelectInput(\"Bathroom\")} >Bathroom</Dropdown.Item>\r\n            </DropdownButton>\r\n\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">room name</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    onChange={roomName}\r\n                    maxLength=\"5\"\r\n                    aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                />\r\n            </InputGroup>\r\n\r\n            <div className=\"AddRoom-circle\">\r\n                <CirclePicker onChangeComplete={roomColor} />\r\n            </div>\r\n\r\n            <ButtonToolbar>\r\n                <Button onClick={sendDateToApp} variant=\"outline-success\">Create</Button>\r\n            </ButtonToolbar>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(AddRoom);","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport '../css/RoomButton.css'\r\nimport { Badge, Button } from 'reactstrap';\r\n\r\nconst RoomButton = ({ quantity, setroomIndex, name, color, index, history }) => {\r\n\r\n    const stateAndRoute = () => {\r\n        history.push('/room');\r\n        return setroomIndex(index)\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            onClick={stateAndRoute}\r\n            className=\"RoomButton-button\"\r\n            style={{ backgroundColor: color }}\r\n            color=\"primary\" outline\r\n        > {name}  <Badge color=\"secondary\">{quantity}</Badge>\r\n        </Button>\r\n    )\r\n}\r\nexport default withRouter(RoomButton);","import React from 'react'\r\nimport '../css/Title.css'\r\n\r\nexport default function Title() {\r\n    return (\r\n        <div className=\"Title\">\r\n            Smart house\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport '../css/RoomWindow.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport DropdownButton  from 'react-bootstrap/DropdownButton'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst RoomWindow = ({ setDataRoom, dataRoom, index, history }) => {\r\n\r\n    const [toggle, settoggle] = useState(false)\r\n    const [Select, setSelect] = useState(\"--Please choose an option--\")\r\n    const [show, setShow] = useState(false);\r\n\r\n    const products = dataRoom[index].products\r\n\r\n    const CheckStereoSystemExsist = () => {\r\n        for (let i = 0; i < products.length; i++) {\r\n            if (products[i].name === 'stereo system') {\r\n                return true\r\n            }\r\n        } return false\r\n    }\r\n\r\n    const CheckBoilerExsist = () => {\r\n        for (let i = 0; i < products.length; i++) {\r\n            if (products[i].name === 'Boiler') {\r\n                return true\r\n            }\r\n        } return false\r\n    }\r\n\r\n    const ProductStatusCheck = () => {\r\n\r\n        if (Select === '--Please choose an option--') {\r\n            console.log('you have to choose a product');\r\n            setShow(true);\r\n            settoggle(false);\r\n        }\r\n        else if (Select === \"stereo system\" && CheckStereoSystemExsist()) {\r\n            console.log('already have stereo system');\r\n            setShow(true);\r\n            settoggle(false);\r\n        }\r\n        else if (Select === 'Boiler' && dataRoom[index].select === 'Bathroom' && CheckBoilerExsist()) {\r\n            console.log('already have Boiler in the Bathroom');\r\n            setShow(true);\r\n            settoggle(false);\r\n        }\r\n        else if (products.length >= 5) {\r\n            console.log('are possible maximum 5 products');\r\n            setShow(true);\r\n            settoggle(false);\r\n        }\r\n        else {\r\n            setDataRoom([...products, { name: Select, mode: \"red\", toggle: false }])\r\n            setSelect(\"--Please choose an option--\")\r\n            settoggle(false);\r\n            history.push('/room');\r\n        }\r\n    }\r\n\r\n\r\n    const showAddProduct = () => {\r\n        if (toggle) {\r\n            return <div>\r\n                <DropdownButton id=\"dropdown-basic-button\" title={Select}>\r\n                    <Dropdown.Item onClick={() => setSelect(\"Air-Conditioner\")} >Air-Conditioner</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => setSelect(\"Boiler\")} >Boiler</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => setSelect(\"stereo system\")} >stereo system</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => setSelect(\"light\")} >light</Dropdown.Item>\r\n                </DropdownButton>\r\n\r\n                <Button onClick={ProductStatusCheck} variant=\"contained\" color=\"primary\">add</Button>\r\n            </div>\r\n        } else {\r\n            return <Button onClick={() => settoggle(!toggle)} variant=\"contained\">add product</Button>\r\n            \r\n        }\r\n    }\r\n\r\n    const AlertDismissible = () => {\r\n\r\n        if (show) {\r\n            return (\r\n                <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n                    <Alert.Heading>You got an error!</Alert.Heading>\r\n                    <p>\r\n                        you have to choose a product<br />\r\n                        already have stereo system<br />\r\n                        already have Boiler in the Bathroom<br />\r\n                        are possible maximum 5 products\r\n              </p>\r\n                </Alert>\r\n            );\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"RoomWindow\">\r\n            room name: {dataRoom[index].name}<br />\r\n            room type: {dataRoom[index].select}<br />\r\n            {showAddProduct()}\r\n            {AlertDismissible()}\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(RoomWindow);\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport '../css/AddRoomButton.css'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst AddRoomButton = ({history}) => {\r\n    return (\r\n        <div className=\"AddRoomButton\">\r\n            <Fab onClick={()=>{history.push('/addroom')}} color=\"primary\" aria-label=\"add\">\r\n                <AddIcon />\r\n            </Fab>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(AddRoomButton)","import React from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport '../css/AddProduct.css'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst stateByColor = state => state ? 'green' : 'red';\r\n\r\nconst IOSSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#52d869',\r\n                opacity: 1,\r\n                border: 'none',\r\n            },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: 'red',\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n    }))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n\r\nconst AddProduct = ({ toggle, productName, state, index, history }) => {\r\n    const toggleRoom = () => { toggle(!state, index); history.push('/room') }\r\n\r\n    return <div>\r\n        <FormGroup>\r\n            <FormControlLabel\r\n                style={{ color: stateByColor(state) }}\r\n                control={\r\n                    <IOSSwitch\r\n                        checked={state}\r\n                        onChange={toggleRoom}\r\n                    />\r\n                }\r\n                label = {productName}\r\n            />\r\n        </FormGroup>\r\n    </div>\r\n}\r\nexport default withRouter(AddProduct)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport '../css/Home.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& > svg': {\r\n            margin: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nfunction HomeIcon(props) {\r\n    return (\r\n        <SvgIcon {...props}>\r\n            <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n        </SvgIcon>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Home = ({ history }) => {\r\n    const classes = useStyles();\r\n    return ( <div>\r\n        <Button onClick={() => history.push('/')} className={classes.root} variant=\"contained\">\r\n            <HomeIcon fontSize=\"large\" />\r\n        </Button>\r\n    </div>\r\n\r\n    )\r\n}\r\nexport default withRouter(Home)","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/App.css';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport AddRoom from './components/AddRoom';\r\nimport RoomButton from './components/RoomButton';\r\nimport Title from './components/Title';\r\nimport RoomWindow from './components/RoomWindow';\r\nimport AddRoomButton from './components/AddRoomButton';\r\nimport AddProduct from './components/AddProduct';\r\nimport Home from './components/Home';\r\n\r\n\r\nconst ProductList = ({dataRoom,roomIndex,toggle }) => {\r\n  return <div className=\"AddProduct\">\r\n    {dataRoom[roomIndex].products\r\n      .map((element, index) => <AddProduct\r\n        toggle={toggle}\r\n        productName={element.name}\r\n        state={element.state}\r\n        index={index}\r\n        key={'product-' + index} />)}\r\n  </div>\r\n}\r\n\r\nfunction App() {\r\n\r\n  const [dataRoom, setDataRoom] = useState([])\r\n  const [roomIndex, setroomIndex] = useState('')\r\n\r\n  const comeFromAddRoom = (roomSelect, roomName, roomColor) => {\r\n    setDataRoom([...dataRoom, { select: roomSelect, name: roomName, color: roomColor, products: [] }])\r\n  }\r\n\r\n  const GetProducts = (list) => {\r\n    let temp = [];\r\n    temp = dataRoom;\r\n    temp[roomIndex].products = list\r\n    setDataRoom(temp)\r\n  }\r\n\r\n  const toggle = (state, index) => {\r\n    dataRoom[roomIndex].products[index].state = state\r\n    setDataRoom(dataRoom)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Title />\r\n      <Router>\r\n        <Route path='/' component={() => <Home />} />\r\n        <Switch>\r\n          <Route exact path='/' component={() => { return <div className=\"RoomButton\">{dataRoom.map((element, index) => <RoomButton quantity={element.products.length} setroomIndex={index => setroomIndex(index)} name={element.name} color={element.color} index={index} key={'room-' + index} />)}</div> }} />\r\n          <Route exact path='/addroom' component={() => <AddRoom setDataRoom={comeFromAddRoom} />} />\r\n          <Route exact path='/room' component={() => <ProductList dataRoom={dataRoom} roomIndex={roomIndex} toggle={toggle}/>} />\r\n        </Switch>\r\n        <Route exact path='/room' component={() => <RoomWindow setDataRoom={GetProducts} dataRoom={dataRoom} index={roomIndex} />} />\r\n\r\n        <Route exact path='/' component={() => <AddRoomButton />} />\r\n      </Router>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}